1 - criar a tela de login - ok

2 - pagina home - ok

3 - liberar acesso - ok

4 - mudar a porta do microsserviço segurança para 8081 - ok

5 - mudar o login username para ser email no frontend - ok

6 - retornar mensagem do userRecord com as validações ok

7 - continuar o curso da micheli em 1:21 minutos, onde ensina adicionar os Rules de administrador e usuário. - ok

10 - Salva a senha criptografada ok

11 - terminar o body no frontend ok

12 - criar a tela de adm no frontend ok

13 - implementar atributos de usuarios em seguranca ok

14 - implementar bean no mapperstruct ok

15 - implementar seguranca no microsservico financeiro

16 - criar entidade usuário no microsservico financeiro ok

17 - Quando criar/atualizar/deletar um novo usuário, o microsservico segurança enviar via RABBITMQ para microsservico financeiro o usuário. ok

19 - Adicionar modal apresentando mensagem "Desejar salvar um planejamento?" ok

20 - Caso o planejamento tenha salvo com sucesso, apresentar a mensagem "Operação executado com sucesso" e atualizar a tabela com o planejamento ok

21 - Caso o planejamento deem erro, apresentar a mensagem "Operação falhou": "mensagem do erro" e fazer tratamento de erro via postman 



INFORMÕES ADICIONAIS:

https://github.com/acenelio/ms-course/tree/main

https://github.com/gostavok/EAD/tree/main
https://github.com/Java-Techie-jt/jwt-apigateway-security


8 - pesquisar para adicionar senha com caracteres, letras e números

9 - transformar meu service-registry em imagem docker para facilitar no desenvolvimento

18 - adicionar log para manitoramento de observabilidade no projeto todo

19 - adicionar cor nas mensagem de erro, sucesso e alerta

20 - adicionar o cronometro de tempo do token no frontend


